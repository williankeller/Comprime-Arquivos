{"name":"Compressão de Arquivos","tagline":"Compressão e União de Arquivos com Cache do Browser usando PHP","body":"#Definições Básicas de Uso\r\n\r\n##Instanciando a Classe de Compressão\r\n```php\r\n$compressao = new Compressao();\r\n```\r\n\r\n##Imprimindo o conteúdo inline\r\nIncluindo arquivos JavaScript usando `array`\r\n```php\r\n$compressao->incluir('js', array('js/jquery.min', 'js/exemplo'));\r\n```\r\n\r\n##Imprimindo o conteúdo inline\r\nIncluindo arquivos JavaScript usando `string`\r\n```php\r\n$compressao->incluir('css', 'css/bootstrap;css/exemplo');\r\n```\r\n\r\n##Imprimindo o conteúdo usando parâmetros da URL\r\n * Uso da função `buscaTipo()` para recuperar o tipo de arquivo na URL\r\n * Uso da função `buscaArquivos()` para recuperar os arquivos passados na URL\r\n\r\n**Ex.:** `comprime.php?tipo=css&arquivos=css/bootstrap;css/exemplo`\r\n```php\r\n$compressao->incluir($compressao->buscaTipo(), $compressao->buscaArquivos());\r\n```\r\nA função `buscaTipo()` será responsável por recuperar o valor passado pelo parâmetro `tipo`\r\nA função `buscaArquivos()` será responsável por recuperar o valor passado pelo parâmetro `arquivos`\r\n\r\n\r\n#Definições Opcionais de Uso\r\n\r\n###Definindo a pasta padrão dos arquivo de entrada ***(opcional)***\r\n```php\r\n/*\r\n * @default recursos/\r\n * @var $pasta (varchar)\r\n */\r\n$compressao->pasta = \"/projetos/recursos/\";\r\n```\r\n\r\n###Definindo o nome do parâmetro na URL para identificar o tipo do arquivo ***(opcional)***\r\n```php\r\n/*\r\n * @default \"tipo\"\r\n * @var $buscaTipo (varchar)\r\n */\r\n$compressao->buscaTipo = \"tipo\";\r\n```\r\n\r\n###Definindo o nome do parâmetro na URL para identificar os arquivos ***(opcional)***\r\n```php\r\n/*\r\n * @default \"arquivos\"\r\n * @var $buscaArquivos (varchar)\r\n */\r\n$compressao->buscaArquivos = \"arquivos\";\r\n```\r\n\r\n###Definindo se o conteúdo deve ou não ser comprimido ***(opcional)***\r\n```php\r\n/*\r\n * @default true\r\n * @uses true / false\r\n * @var $arquivoComprime (boolean varchar)\r\n */\r\n$compressao->arquivoComprime = true;\r\n```\r\n\r\n###Definindo o termo no arquivo para que ele seja ignorado ***(opcional)***\r\n```php\r\n/*\r\n * @default \".min\"\r\n * @uses .min / min. / .minify\r\n * @var $ignorar (varchar)\r\n */\r\n$compressao->ignorar = '.min';\r\n```\r\n\r\n###Definindo se a entrada deve ser do tipo `array` ou `varchar` ***(opcional)***\r\n```php\r\n/*\r\n * @default true\r\n * @uses true / false\r\n * @var $modoArray (boolean varchar)\r\n */\r\n$compressao->modoArray = true;\r\n```\r\n\r\n###Definindo o modo de separação dos arquivos ***(opcional)***\r\n```php\r\n/*\r\n * NOTA: Não usar ponto (.) a classe o interpreta para definir outros valores\r\n * @default \";\"\r\n * @uses ; / , / *\r\n * @var $modoSeparador (varchar)\r\n */\r\n$compressao->modoSeparador = \";\";\r\n```\r\n\r\n###Definindo se o retorno deve ser cacheado em `browser` ou não ***(opcional)***\r\n```php\r\n/*\r\n * @default false\r\n * @uses true / false\r\n * @var $cacheavel (boolean varchar)\r\n */\r\n$compressao->cacheavel = false;\r\n```\r\n\r\n###Definindo o tempo de vida do Cache (em segundo) ***(opcional)***\r\n```php\r\n/*\r\n * @default 604800\r\n * @var $cache (int)\r\n */\r\n$compressao->cache = 604800;\r\n```\r\n\r\n\r\n## Contato\r\nSe precisar entrar em contato, will_levinski@hotmail.com ou n3p0rb1t@gmail.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}